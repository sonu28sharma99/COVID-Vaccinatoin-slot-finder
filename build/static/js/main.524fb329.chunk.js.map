{"version":3,"sources":["constants/states.js","api/results.js","services/results.js","PaginatedResults.js","Results.js","App.js","index.js"],"names":["states","_id","name","getSlotsByPin","pin","date","a","url","axios","get","headers","then","response","data","sessions","catch","err","console","error","res","getSlotsByDistrict","id","getResults","trim","distRes","pinRes","filterDist","length","filter","session","pincode","SessionCard","vaccine","min_age","paid","capacity","fee","Card","style","backgroundColor","minWidth","height","CardContent","display","flexDirection","justifyContent","marginTop","marginLeft","PaginatedResults","Grid","container","spacing","paddingRight","marginBottom","width","map","idx","item","xs","sm","md","lg","min_age_limit","fee_type","available_capacity","center_id","Results","results","indexOfLastItem","currPage","indexOfFirstItem","currResults","slice","paddingLeft","color","App","useState","stateList","districtList","setDistrictList","selectedStateObj","setSelectedStateObj","selectedDistrictObj","setSelectedDistrictObj","age","setAge","setPin","Date","selectedDate","setSelectedDate","setResults","setCurrPage","getDistricts","event","target","value","districts","getFinalResults","format","district_id","resultsList","final","flex","paddingTop","paddingBottom","onSubmit","e","preventDefault","TextField","select","label","onChange","helperText","required","state","MenuItem","disabled","district","district_name","utils","DateFnsUtils","KeyboardButtonProps","Button","size","variant","type","alignItems","Pagination","count","Math","ceil","page","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.524fb329.chunk.js","sourcesContent":["export const states = [\r\n  {_id:1,name:\"Andaman and Nicobar Islands\"},\r\n  {_id:2,name:\"Andhra Pradesh\"},\r\n  {_id:3,name:\"Arunachal Pradesh\"},\r\n  {_id:4,name:\"Assam\"},\r\n  {_id:5,name:\"Bihar\"},\r\n  {_id:6,name:\"Chandigarh\"},\r\n  {_id:7,name:\"Chhattisgarh\"},\r\n  {_id:8,name:\"Dadra and Nagar Haveli\"},\r\n  {_id:37,name:\"Daman and Diu\"},\r\n  {_id:9,name:\"Delhi\"},\r\n  {_id:10,name:\"Goa\"},\r\n  {_id:11,name:\"Gujarat\"},\r\n  {_id:12,name:\"Haryana\"},\r\n  {_id:13,name:\"Himachal Pradesh\"},\r\n  {_id:14,name:\"Jammu and Kashmir\"},\r\n  {_id:15,name:\"Jharkhand\"},\r\n  {_id:16,name:\"Karnataka\"},\r\n  {_id:17,name:\"Kerala\"},\r\n  {_id:18,name:\"Ladakh\"},\r\n  {_id:19,name:\"Lakshadweep\"},\r\n  {_id:20,name:\"Madhya Pradesh\"},\r\n  {_id:21,name:\"Maharashtra\"},\r\n  {_id:22,name:\"Manipur\"},\r\n  {_id:23,name:\"Meghalaya\"},\r\n  {_id:24,name:\"Mizoram\"},\r\n  {_id:25,name:\"Nagaland\"},\r\n  {_id:26,name:\"Odisha\"},\r\n  {_id:27,name:\"Puducherry\"},\r\n  {_id:28,name:\"Punjab\"},\r\n  {_id:29,name:\"Rajasthan\"},\r\n  {_id:30,name:\"Sikkim\"},\r\n  {_id:31,name:\"Tamil Nadu\"},\r\n  {_id:32,name:\"Telangana\"},\r\n  {_id:33,name:\"Tripura\"},\r\n  {_id:34,name:\"Uttar Pradesh\"},\r\n  {_id:35,name:\"Uttarakhand\"},\r\n  {_id:36,name:\"West Bengal\"}\r\n];","import axios from \"axios\"\r\n\r\nexport const getSlotsByPin = async (pin, date) => {\r\n  const url = `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByPin?pincode=${pin}&date=${date}`;\r\n\r\n  const res = await axios.get(url, {\r\n    headers: {\r\n      'accept': 'application/json',\r\n      'Accept-Language': 'en-US',\r\n    },\r\n  }).then(response => response.data.sessions).catch(err => console.error(err));\r\n  // console.log(res);\r\n  return res || [];\r\n}\r\n\r\nexport const getSlotsByDistrict = async (id, date) => {\r\n  const url = `https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByDistrict?district_id=${id}&date=${date}`;\r\n\r\n  const res = await axios.get(url, {\r\n    headers: {\r\n      'accept': 'application/json',\r\n      'Accept-Language': 'en-US',\r\n    },\r\n  }).then(response => response.data.sessions).catch(err => console.error(err));\r\n  // console.log(res);\r\n  return res || [];\r\n}","import {getSlotsByDistrict, getSlotsByPin} from '../api/results';\r\n\r\n// const awaitedResults = async (pin, date, id) => {\r\n//     const res1\r\n// }\r\n\r\nexport const getResults = async (pin, date, id) => {\r\n    if(pin.trim() !== '') {\r\n        const distRes = await getSlotsByDistrict(id, date);\r\n        const pinRes = await getSlotsByPin(pin, date);\r\n        let filterDist = [];\r\n        if(distRes && pinRes) {\r\n            // console.log('1');\r\n            if(distRes.length > 0) {\r\n                filterDist = distRes.filter(session => {\r\n                    return session.pincode !== pin;\r\n                });\r\n            }\r\n            // console.log(filterDist);\r\n            return [...pinRes, ...filterDist];\r\n        }\r\n    }\r\n    else {\r\n        const res = await getSlotsByDistrict(id, date);\r\n        // console.log(res);\r\n        return res;\r\n    }\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n// name, min_age_limit, vaccine, capacity, fee_type, fee\r\nconst SessionCard = ({name, vaccine, min_age, paid, capacity, fee}) => {\r\n  return (\r\n    <Card style={{backgroundColor: '#3f51b519', minWidth: '160px', height: '180px'}}>\r\n      <CardContent>\r\n        <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between', marginTop: '-20px'}}>\r\n          <h4>\r\n            {name}\r\n          </h4>\r\n          <h4 style={{marginLeft: '10px'}}>\r\n            {paid ? 'Paid' : \"Free\"}\r\n          </h4>\r\n        </div>\r\n        <h6 style={{\r\n          marginTop: '-12px',\r\n        }}>\r\n          **{vaccine}**\r\n        </h6>\r\n        <h5\r\n        style={{\r\n          marginTop: '-9px',\r\n        }}>\r\n          Minimum Age: {min_age}\r\n        </h5><h5\r\n        style={{\r\n          marginTop: '-15px',\r\n        }}>\r\n          Capacity: {capacity}\r\n        </h5>\r\n        <h5\r\n        style={{\r\n          marginTop: '-15px',\r\n        }}>\r\n          Fee: ₹{fee}\r\n        </h5>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport const PaginatedResults = ({sessions}) => {\r\n  return (\r\n    <Grid container spacing={4} style={{\r\n      paddingRight: '10px',\r\n      marginBottom: '20px',\r\n      width: '90%',\r\n      // backgroundColor: 'yellow'\r\n    }}>\r\n      {\r\n        sessions.map((session, idx) => (\r\n          <Grid item xs={12} sm={6} md={6} lg={4}>\r\n            <SessionCard\r\n              name = {session.name}\r\n              vaccine = {session.vaccine}\r\n              min_age = {session.min_age_limit}\r\n              paid = {session.fee_type === \"Free\" ? false : true}\r\n              capacity = {session.available_capacity}\r\n              fee = {session.fee}\r\n              key={session.center_id}\r\n            />\r\n          </Grid>\r\n        ))\r\n      }\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { PaginatedResults } from './PaginatedResults';\r\n\r\nconst Results = ({results, currPage}) => {\r\n  const perPage = 15;\r\n  const indexOfLastItem = currPage*perPage;\r\n  const indexOfFirstItem = indexOfLastItem - perPage;\r\n  const currResults = results.slice(indexOfFirstItem, indexOfLastItem);\r\n  // console.log(results);\r\n  return (\r\n    <div style={{marginTop: '45px', paddingLeft: '25px'}}>\r\n      {results.length !== 0 ? (\r\n        <>\r\n          <h2 style={{marginBottom: '35px'}}>Available Centers:</h2>\r\n          <PaginatedResults sessions={currResults} />\r\n        </>\r\n      ) : (\r\n        <h2 style={{color: 'red'}}>No slots available for the details you provided. Try something else.</h2>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;","import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { MenuItem } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Button from '@material-ui/core/Button';\r\nimport format from 'date-fns/format'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\n\r\nimport {states} from './constants/states';\r\nimport {getResults} from './services/results';\r\nimport Results from './Results';\r\n\r\nconst App = () => {\r\n  const [stateList] = useState(states);\r\n  const [districtList, setDistrictList] = useState([]);\r\n  const [selectedStateObj, setSelectedStateObj] = useState(\"\");\r\n  const [selectedDistrictObj, setSelectedDistrictObj] = useState(\"\");\r\n  const [age, setAge] = useState('');\r\n  const [pin, setPin] = useState('');\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [results, setResults] = useState(null);\r\n  const [currPage, setCurrPage] = useState(1);\r\n  // const [showRes, setShowRes] = useState(false);\r\n\r\n  const getDistricts = async (event) => {\r\n    try {\r\n      const res = await axios.get('https://cdn-api.co-vin.in/api/v2/admin/location/districts/'+event.target.value._id, {\r\n        headers: {\r\n          'accept': 'application/json',\r\n          'Accept-Language': 'en-US',\r\n        }\r\n      });\r\n      if(res.data.districts.length > 0) {\r\n        setDistrictList(res.data.districts)\r\n      }\r\n    } catch(err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  const handleStateChange = (event) => {\r\n    setSelectedStateObj(event.target.value);\r\n    getDistricts(event);\r\n  }\r\n\r\n  const handleDistrictChange = (event) => {\r\n    setSelectedDistrictObj(event.target.value);\r\n  }\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  }\r\n\r\n  const handlePinInput = e => {\r\n    setPin(e.target.value);\r\n  }\r\n  const handleAgeInput = e => {\r\n    setAge(e.target.value);\r\n  }\r\n\r\n  const getFinalResults = async () => {\r\n    const date = format(new Date(selectedDate), 'dd-MM-yyyy');\r\n    const resultsList = await getResults(pin, date, selectedDistrictObj.district_id);\r\n    if(resultsList) {\r\n      if(age.trim() !== '') {\r\n        const final = resultsList.filter(session => {\r\n          return +age >= session.min_age_limit;\r\n        });\r\n        // console.log(final);\r\n        setResults(final);\r\n        // setShowRes(true);\r\n      }\r\n      else {\r\n        setResults(resultsList);\r\n        // setShowRes(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(selectedDate);\r\n    getFinalResults();\r\n  }\r\n\r\n  const onPageChange = (event, page) => {\r\n    setCurrPage(page);\r\n  }\r\n\r\n  return(\r\n    <div style={{flex: 1, paddingTop: '30px', paddingBottom: '30px'}}>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <Grid container spacing={3} style={{paddingRight: '350px', paddingLeft: '30px'}}>\r\n          <Grid item xs={12} md={6} lg={6} sm={12}>\r\n            <TextField\r\n              select\r\n              id='state-dropdown'\r\n              label='Select State'\r\n              value={selectedStateObj}\r\n              onChange={handleStateChange}\r\n              helperText='Please Select your State'\r\n              style={{width: '300px', minWidth: '170px'}}\r\n              required\r\n              // variant='filled'\r\n            >\r\n              {stateList.map(state => (\r\n                <MenuItem key={state._id} value={state}>\r\n                  {state.name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={12} md={6} lg={6} sm={12}>\r\n            <TextField\r\n              select\r\n              id='district-dropdown'\r\n              label='Select District'\r\n              value={selectedDistrictObj}\r\n              onChange={handleDistrictChange}\r\n              helperText='Please Select your District'\r\n              style={{width: '300px', minWidth: '170px'}}\r\n              disabled={!districtList.length>0}\r\n              required\r\n              // variant='filled'\r\n            >\r\n              {districtList.map(district => (\r\n                <MenuItem key={district.district_id} value={district}>\r\n                  {district.district_name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid item xs={12} md={3} lg={3} sm={6}>\r\n              <KeyboardDatePicker\r\n                // margin=\"normal\"\r\n                id=\"date-picker-dialog\"\r\n                label=\"Date\"\r\n                format=\"dd-MM-yyyy\"\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n                helperText=\"Pick a date\"\r\n                required\r\n                style={{\r\n                  minWidth: '140px',\r\n                }}\r\n                // variant='filled'\r\n              />\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n          <Grid item xs={12} md={3} lg={3} sm={6}>\r\n            <TextField\r\n              id='pin-field'\r\n              label='Pincode'\r\n              value={pin}\r\n              onChange={handlePinInput}\r\n              helperText='Enter Pincode'\r\n              style={{width: '140px'}}\r\n              // variant='filled'\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} md={3} lg={3} sm={6}>\r\n            <TextField\r\n              id='age-field'\r\n              label='Age'\r\n              value={age}\r\n              onChange={handleAgeInput}\r\n              helperText='Enter Age'\r\n              style={{width: '100px'}}\r\n              // variant='filled'\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={3} lg={3} sm={12}>\r\n            <Button size='medium' variant='contained' color='primary' style={{\r\n              height: '40px',\r\n              marginTop: '10px'\r\n            }}\r\n            type='submit'\r\n            >\r\n              Search\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      {results && <Results results={results} currPage={currPage} />}\r\n      {results && \r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            // marginBottom: '30px',\r\n          }}\r\n        >\r\n          <Pagination count={Math.ceil(results.length/15)} color='primary' size='large' onChange={onPageChange}\r\n            // style={{\r\n            //   alig\r\n            // }}\r\n          />\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />, document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}